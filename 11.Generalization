library(readr) 
library(readxl) 
library(tidyverse) 
library(limma) 
library(edgeR) 
library(AnnotationDbi) 
library(org.Hs.eg.db)
library(ComplexHeatmap) 
library(circlize) 
library(RColorBrewer) 
library(survival)
library(survminer)
library(dplyr)

TCGA_clinicaldata <- read_excel("~/Desktop/Doktorarbeit/AXL/validation/andere Tumore/TCGA_Clinical_Raw_Data.xlsx", sheet=3)
AXL_lasso <- TCGA_clinicaldata %>%
  dplyr::select(Patient_ID, OS, OS.time)
AXL_lasso <- AXL_lasso %>%
  filter(!is.na(AXL_lasso$OS.time))

TCGA_HNSC_GDCHarmonized_HTSeqFPKM <- read_delim("~/Desktop/Doktorarbeit/AXL/validation/andere Tumore/ACC_counts_TCGA.txt", "\t", escape_double = FALSE, trim_ws = TRUE) # FPKM data
GeneID_overlap <- read_excel("~/Desktop/Doktorarbeit/AXL/TCGA_FPKM_mygene.xlsx", sheet = 2)

fpkm_data <- TCGA_HNSC_GDCHarmonized_HTSeqFPKM %>% 
  filter(TCGA_HNSC_GDCHarmonized_HTSeqFPKM$Entrez_Gene_ID %in% GeneID_overlap$GeneID_all) %>%
  as.data.frame(.)

colnames(fpkm_data) <- gsub("-01","",colnames(fpkm_data), fixed=TRUE)
rownames(fpkm_data) <- fpkm_data$Entrez_Gene_ID 
fpkm_data$Entrez_Gene_ID <- NULL
fpkm_data <- t(fpkm_data)
fpkm_data <- as.data.frame(fpkm_data)
fpkm_data$Patient_ID <- c(rownames(fpkm_data))

AXL_lasso <- left_join(AXL_lasso, fpkm_data, by = "Patient_ID") #adding to your clinicaldata

rt1 <- AXL_lasso
rt1=rt1%>%
  filter(!is.na(rt1$'558'))

write.table(rt1, "rtACC.txt", sep="\t", row.names=FALSE, na="")
rt1 <- read_delim("~/Desktop/Doktorarbeit/AXL/validation/andere Tumore/rtACC_ohneNA1.txt", "\t", escape_double = FALSE, trim_ws = TRUE) # FPKM data
   
x=as.matrix(rt1[,c(4:ncol(rt1))])
y=data.matrix(Surv(rt1$OS.time,rt1$OS))

fit <- glmnet(x, y, family = "cox", maxit = 1e+9)
plot(fit, xvar = "lambda", label = FALSE, lw=2)

cvfit <- cv.glmnet(x, y, family="cox", lambda = NULL)
abline(v=log(c(cvfit$lambda.min,cvfit$lambda.1se)),lty="dashed")
plot(cvfit)

coef <- coef(fit, s = cvfit$lambda.min)
index <- which(coef != 0)
actCoef <- coef[index]
lassoGene=row.names(coef)[index]
geneCoef=cbind(Gene=lassoGene,Coef=actCoef)
write.table(geneCoef,file="geneCoefallgenes.txt",sep="\t",quote=F,row.names=F)

riskScore=predict(cvfit, newx = x, s = "lambda.min",type="response")
outCol=c("OS.time","OS",lassoGene)
outTab=cbind(rt1[,outCol],riskScore=as.vector(riskScore), rt1$Patient_ID)
write.table(cbind(id=rownames(outTab),outTab),
            file="lassoRiskACC.txt",
            sep="\t",
            quote=F,
            row.names=F)

#best cutoff
library(maxstat)
library(survival)
stat <- maxstat.test(Surv(outTab$OS.time,outTab$OS)~outTab$riskScore, data = outTab, smethod="LogRank",pmethod="exactGauss", abseps=0.01)
cutoff<-stat$estimate
risk=as.vector(ifelse(riskScore>cutoff,"high","low"))
write.table(cbind(id=rownames(outTab),outTab,risk),
            file="MaxstatlassoRiskACC.txt",
            sep="\t",
            quote=F,
            row.names=F)

#ACC OS 
library("glmnet")
library("survival")

ACC_clinicaldata <- read_excel("~/Desktop/Doktorarbeit/AXL/validation/andere Tumore/TCGA_Clinical_Raw_Data.xlsx", sheet=3)
AXL_lassoACC <- ACC_clinicaldata %>%
  dplyr::select(Patient_ID, OS, OS.time)

AXL_lassoACC <- AXL_lassoACC %>%
  filter(!is.na(AXL_lassoACC$OS.time))

fpkm <- read_delim("~/Desktop/Doktorarbeit/AXL/validation/andere Tumore/ACC_counts_TCGA.txt", "\t", escape_double = FALSE, trim_ws = TRUE) # FPKM data
fpkm=fpkm%>%
  filter(!is.na(fpkm$Entrez_Gene_ID))
row.names(fpkm) <- fpkm$Entrez_Gene_ID
fpkm<-fpkm [c("1301","1146"),]
row.names(fpkm) <- fpkm$Entrez_Gene_ID
fpkm <- as.data.frame(fpkm)
fpkm[1] <- NULL
fpkm <- as.matrix.data.frame(fpkm)

fpkm <-log(fpkm+1)
fpkm <-scale(t(fpkm), center = T, scale=T)

write.table(fpkm, "validation_unedited_ACC-OS.txt", sep="\t", row.names= T, na="") #=expression value.Gene

#manuell hergetsllete datei einfÃ¼gen
outTab <- read_excel("~/Desktop/Doktorarbeit/AXL/validation/validierung/validation final.xlsx", sheet = 9)
outTab <- outTab %>%
  filter(!is.na(outTab$OS))

#best cutoff
library(maxstat)
library(survival)
stat <- maxstat.test(Surv(outTab$OS.time,outTab$OS)~outTab$riskScore, data = outTab, smethod="LogRank",pmethod="exactGauss", abseps=0.01)
cutoff<-stat$estimate
risk=as.vector(ifelse(outTab$riskScore>cutoff,"high","low"))
write.table(cbind(Patient_ID=rownames(outTab),outTab,risk),
            file="Validationrisk_ACC_OS.txt",
            sep="\t",
            quote=F,
            row.names=F)
clinical_acc <- read_excel("~/Desktop/Doktorarbeit/AXL/validation/validierung/riskScore_Validation.xlsx", sheet = 9)
KM <- survfit( Surv(OS.time, OS) ~ risk, data = clinical_acc ) 


#abline(h=0.5, col="red")

ggsurvplot(
  fit = survfit(Surv(OS.time, OS) ~ risk, data = clinical_acc), 
  xlab = "Survival in days", 
  ylab = "Survival Rate",
  risk.table = TRUE,
  pval = TRUE,
  legend.labs =c("high","low"),
  palette = c("red","blue"),
  font.legend = c(25, "bold"),
  legend.title="")
